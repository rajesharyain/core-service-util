{"version":3,"file":"auth.service.js","sourceRoot":"","sources":["auth.service.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe;OAGvD,EAAE,cAAc,EAAE,MAAM,8BAA8B;AAI7D;IAII,qBAAa,cAAmB;QAC5B,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;IACzC,CAAC;IAED,kCAAY,GAAZ,UAAa,GAAW;QACpB,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IACE,sBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,0BAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,cAAM,OAAA,cAAc,EAAd,CAAc,CAAC,EAAG,EAAE,EAAG,EAAC;KAC9F,EAF6F,CAE7F,CAAC;IACF,kBAAC;AAAD,CAAC,AAlBD,IAkBC","sourcesContent":["import { Injectable, Inject, forwardRef } from \"@angular/core\";\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { AppUserService } from '../app-user/app-user.service';\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\n\r\nexport class AuthService {\r\n    \r\n    appUserService: any;\r\n    \r\n    constructor( appUserService: any) {\r\n        this.appUserService = appUserService;\r\n    }\r\n\r\n    isAccessible(url: string): Observable<boolean> {\r\n        return this.appUserService.isAccessible(url.slice(1));\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: undefined, decorators: [{ type: Inject, args: [forwardRef(() => AppUserService), ] }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}