{"version":3,"file":"auth.guard.js","sourceRoot":"","sources":["auth.guard.ts"],"names":[],"mappings":"OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,eAAe;OAC3C,EAAE,MAAM,EAA4D,MAAM,iBAAiB;OAG3F,EAAE,WAAW,EAAE,MAAM,gBAAgB;AAG5C;IACI,mBAAqB,MAAc,EAAW,WAAwB;QAAjD,WAAM,GAAN,MAAM,CAAQ;QAAW,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAE3E,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI,GAAG,GAAW,KAAK,CAAC,GAAG,CAAC;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,GAAG,GAAG,MAAM,CAAC,SAAS,CAAE,UAAA,YAAY;YACpC,EAAE,CAAA,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,SAAS,CAAC;gBACjF,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAClC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IACE,oBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,wBAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAG,EAAC;QAClE,EAAC,IAAI,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,WAAW,EAAG,EAAE,EAAG,EAAC;KAC3E,EAH6F,CAG7F,CAAC;IACF,gBAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import { Injectable, Inject } from \"@angular/core\";\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable } from \"rxjs/Rx\";\r\n\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n\r\nexport class AuthGuard implements CanActivate {\r\n    constructor( private router: Router,  private authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | boolean {\r\n        let url: string = state.url;\r\n        let source = this.authService.isAccessible(url);\r\n        let sub = source.subscribe (isAccessible => { \r\n            if(!isAccessible) {             \r\n                window.location.href = \"/\" + window.sessionStorage.getItem('APP_ID') + \"/logout\";\r\n                window.sessionStorage.clear();\r\n            }\r\n        });\r\n        return source;\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Router, decorators: [{ type: Inject, args: [Router, ] }, ]},\n{type: AuthService, decorators: [{ type: Inject, args: [AuthService, ] }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}