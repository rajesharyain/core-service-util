{"version":3,"file":"http-wrapper.service.js","sourceRoot":"","sources":["http-wrapper.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable, EventEmitter, Inject} from '@angular/core';\r\nimport {Http, Headers, RequestOptions, RequestOptionsArgs, Response, RequestMethod, Request, Connection, ConnectionBackend} from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\n//export enum Action { QueryStart, QueryStop };\r\n\r\n\r\nexport class HttpWrapperService {\r\n  process: EventEmitter<any> = new EventEmitter<any>();\r\n  authFailed: EventEmitter<any> = new EventEmitter<any>();\r\n  backendError: Subject<string> = new Subject<string>();\r\n  loader: Subject<string> = new Subject<string>();\r\n\r\n  constructor( private _http: Http) { }\r\n\r\n  private _buildAuthHeader(): any {\r\n    return window.sessionStorage.getItem(\"apiKey\") ? window.sessionStorage.getItem(\"apiKey\") : \"\";\r\n  }\r\n\r\n  public get(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request(RequestMethod.Get, url, null, options);\r\n  }\r\n\r\n  public get1(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request1(RequestMethod.Get, url, null, options);\r\n  }\r\n\r\n  public post(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request(RequestMethod.Post, url, body, options);\r\n  }\r\n\r\n  public post1(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request1(RequestMethod.Post, url, body, options);\r\n  }\r\n\r\n  public put(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request(RequestMethod.Put, url, body, options);\r\n  }\r\n\r\n  public put1(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request1(RequestMethod.Put, url, body, options);\r\n  }\r\n\r\n  public delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request(RequestMethod.Delete, url, null, options);\r\n  }\r\n\r\n  public delete1(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request1(RequestMethod.Delete, url, null, options);\r\n  }\r\n\r\n  public patch(url: string, body: any, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request(RequestMethod.Patch, url, body, options);\r\n  }\r\n\r\n  public head(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n    return this._request(RequestMethod.Head, url, null, options);\r\n  }\r\n\r\n  private _request(method: RequestMethod, url: any, body?: any, options?: RequestOptionsArgs): Observable<Response> {\r\n    let requestOptions = new RequestOptions(Object.assign({\r\n      method: method,\r\n      url: url,\r\n      body: body\r\n    }, options));\r\n\r\n    if (!requestOptions.headers) {\r\n      requestOptions.headers = new Headers();\r\n    }\r\n\r\n    requestOptions.headers.set(\"apikey\", this._buildAuthHeader());\r\n    return this._http.request(new Request(requestOptions));\r\n\r\n    /*return Observable.create((observer) => {\r\n      this.process.next(Action.QueryStart);\r\n      this._http.request(new Request(requestOptions))\r\n        .map(res=> res.json())\r\n        .finally(() => {\r\n        this.process.next(Action.QueryStop);\r\n      })\r\n        .subscribe(\r\n        (res) => {\r\n          observer.next(res);\r\n          observer.complete();\r\n        },\r\n        (err) => {\r\n          switch (err.status) {\r\n            case 401:\r\n              //intercept 401\r\n              this.authFailed.next(err);\r\n              observer.error(err);\r\n              break;\r\n            default:\r\n              observer.error(err);\r\n              break;\r\n          }\r\n        })\r\n    })*/\r\n  }\r\n\r\n     public addSSO(url: string) {\r\n        if (url.includes(\"?\")) {\r\n            return url + '&_sso=' + window.sessionStorage.getItem('_sso');\r\n        } else {\r\n            return url + '?_sso=' + window.sessionStorage.getItem('_sso');\r\n        }\r\n    }\r\n\r\n    private _request1(method: RequestMethod, url: string, body?: any, options?: RequestOptionsArgs): Observable<Response> {\r\n        let requestOptions = new RequestOptions(Object.assign({\r\n          method: method,\r\n          url: this.addSSO(url),\r\n          body: body\r\n        }, options));\r\n\r\n        if (!requestOptions.headers) {\r\n          requestOptions.headers = new Headers();\r\n        }\r\n        //this.backendError.next('----request1----'+url);\r\n        requestOptions.headers.set(\"apikey\", this._buildAuthHeader());\r\n\r\n        this.updateLoader(false);\r\n        return this._http.request(new Request(requestOptions))\r\n            .map((res:Response) => {\r\n                this.updateLoader(true);\r\n                if(res.status == 200) {\r\n                    return res.json();\r\n                } else {\r\n                    return res;\r\n                }\r\n            })\r\n            .catch((error:any) => {\r\n                this.updateLoader(true);\r\n                this.backendError.next(error);\r\n                return Observable.throw(error.json().error || 'Server error');\r\n            });\r\n    }\r\n\r\n    updateLoader(val: any) {\r\n        this.loader.next(val);\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, decorators: [{ type: Inject, args: [Http, ] }, ]},\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}