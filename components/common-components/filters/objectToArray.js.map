{"version":3,"file":"objectToArray.js","sourceRoot":"","sources":["objectToArray.ts"],"names":[],"mappings":"OAAO,EAAC,IAAI,EAAiB,MAAM,eAAe;AAGlD;IAAA;IAkBA,CAAC;IAjBC,qCAAS,GAAT,UAAU,GAAQ;QAChB,IAAI,MAAM,GAAQ,EAAE,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,IAAI,CAAC,EAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,EAAC,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IACI,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;oBACnB,IAAI,EAAE,eAAe;iBACtB,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,wBAAC;AAAD,CAAC,AAlBD,IAkBC","sourcesContent":["import {Pipe, PipeTransform } from '@angular/core';\r\n\r\n\r\nexport class ObjectToArrayPipe implements PipeTransform {\r\n  transform(obj: any) {\r\n    let result: any = [];\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        result.push({key: key, value: obj[key]});\r\n      }\r\n    }\r\n    return result;\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Pipe, args: [{\r\n  name: 'objectToArray'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}